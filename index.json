{"project": "zarrtraj", "project_url": "https://zarrtraj.readthedocs.io/en/latest/index.html", "show_commit_url": "https://github.com/Becksteinlab/zarrtraj/commit", "hash_length": 8, "revision_to_hash": {"123": "10b92c5a99a7aa24c55d48153f9bca6bf35f9b9e", "195": "cce9aa99ed1d0b38c1e0893f351eaf3c07b2aeca", "196": "b507badb2c1dd29cc7714ec850f3e6213738f13c", "197": "bbb8dfba82592ead28213b45441a019eca81e486", "198": "c758b605a5c7a1052ff73250d637b1c825839b84", "200": "5e60aba6dd2e542bed42eb1f0506854451b13d76"}, "revision_to_date": {"123": 1715314324000, "195": 1720753492000, "196": 1720846004000, "197": 1720846023000, "198": 1720849261000, "200": 1721105708000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz"], "machine": ["spudda"], "num_cpu": ["24"], "os": ["Linux 5.15.0-107-generic"], "ram": ["32874100"], "python": ["3.10"], "branch": ["benchmarks-dev"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz", "machine": "spudda", "num_cpu": "24", "os": "Linux 5.15.0-107-generic", "ram": "32874100", "python": "3.10", "branch": "benchmarks-dev"}], "benchmarks": {"reader_bms.H5MDFmtAWSRMSFTime.time_rmsf": {"code": "class H5MDFmtAWSRMSFTime:\n    def time_rmsf(self, filename, method):\n        \"\"\"Benchmark striding over full trajectory\"\"\"\n        if method == \"mda\":\n            rms.RMSF(self.universe.atoms).run()\n        elif method == \"dask\":\n            rmsf = dask_rmsf(self.positions)\n            rmsf.compute()\n\n    def setup(self, filename, method):\n        if method == \"dask\":\n            self.positions = da.from_array(\n                zarr.open_group(filename)[\n                    \"/particles/trajectory/position/value\"\n                ]\n            )\n    \n        elif method == \"mda\":\n            self.universe = mda.Universe(\n                f\"{BENCHMARK_DATA_DIR}/yiip_equilibrium/YiiP_system.pdb\",\n                filename,\n            )", "min_run_count": 2, "name": "reader_bms.H5MDFmtAWSRMSFTime.time_rmsf", "number": 0, "param_names": ["filename", "method"], "params": [["'s3://zarrtraj-test-data/yiip_aligned_compressed.zarrmd'", "'s3://zarrtraj-test-data/yiip_aligned_uncompressed.zarrmd'"], ["'dask'", "'mda'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 2400.0, "type": "time", "unit": "seconds", "version": "<function version at 0x7fb833929940>", "warmup_time": -1}, "reader_bms.H5MDFmtDiskRMSFTime.time_rmsf": {"code": "class H5MDFmtDiskRMSFTime:\n    def time_rmsf(self, filename, method):\n        \"\"\"Benchmark striding over full trajectory\"\"\"\n        if method == \"mda\":\n            rms.RMSF(self.universe.atoms).run()\n        elif method == \"dask\":\n            rmsf = dask_rmsf(self.positions)\n            rmsf.compute()\n\n    def setup(self, filename, method):\n        if method == \"dask\":\n            self.positions = da.from_array(\n                zarr.open_group(filename)[\n                    \"/particles/trajectory/position/value\"\n                ]\n            )\n    \n        elif method == \"mda\":\n            self.universe = mda.Universe(\n                f\"{BENCHMARK_DATA_DIR}/yiip_equilibrium/YiiP_system.pdb\",\n                filename,\n            )", "min_run_count": 2, "name": "reader_bms.H5MDFmtDiskRMSFTime.time_rmsf", "number": 0, "param_names": ["filename", "method"], "params": [["'/scratch/ljwoods2/workspace/zarrtraj/zarrtraj/data//yiip_aligned_compressed.zarrmd'", "'/scratch/ljwoods2/workspace/zarrtraj/zarrtraj/data//yiip_aligned_uncompressed.zarrmd'"], ["'dask'", "'mda'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 2400.0, "type": "time", "unit": "seconds", "version": "<function version at 0x7fb833929940>", "warmup_time": -1}, "reader_bms.H5MDReadersDiskStrideTime.time_strides": {"code": "class H5MDReadersDiskStrideTime:\n    def time_strides(self, filename, reader):\n        \"\"\"Benchmark striding over full trajectory\"\"\"\n        for ts in self.reader_object:\n            pass\n\n    def setup(self, filename, reader):\n        self.reader_object = reader(filename)", "min_run_count": 2, "name": "reader_bms.H5MDReadersDiskStrideTime.time_strides", "number": 0, "param_names": ["filename", "reader"], "params": [["'/scratch/ljwoods2/workspace/zarrtraj/zarrtraj/data//yiip_aligned_compressed.h5md'", "'/scratch/ljwoods2/workspace/zarrtraj/zarrtraj/data//yiip_aligned_uncompressed.h5md'"], ["<class 'zarrtraj.ZARR.ZARRH5MDReader'>", "<class 'MDAnalysis.coordinates.H5MD.H5MDReader'>"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 2400.0, "type": "time", "unit": "seconds", "version": "<function version at 0x7fb833929940>", "warmup_time": -1}, "reader_bms.ZARRH5MDDiskStrideTime.time_strides": {"code": "class ZARRH5MDDiskStrideTime:\n    def time_strides(self, filename):\n        \"\"\"Benchmark striding over full trajectory\"\"\"\n        for ts in self.reader_object:\n            pass\n\n    def setup(self, filename):\n        self.reader_object = ZARRH5MDReader(filename)", "min_run_count": 2, "name": "reader_bms.ZARRH5MDDiskStrideTime.time_strides", "number": 0, "param_names": ["filename"], "params": [["'/scratch/ljwoods2/workspace/zarrtraj/zarrtraj/data//yiip_aligned_compressed.zarrmd'", "'/scratch/ljwoods2/workspace/zarrtraj/zarrtraj/data//yiip_aligned_uncompressed.zarrmd'", "'/scratch/ljwoods2/workspace/zarrtraj/zarrtraj/data//yiip_aligned_compressed.h5md'", "'/scratch/ljwoods2/workspace/zarrtraj/zarrtraj/data//yiip_aligned_uncompressed.h5md'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 2400.0, "type": "time", "unit": "seconds", "version": "<function version at 0x7fb833929940>", "warmup_time": -1}, "reader_bms.ZARRH5MDS3StrideTime.time_strides": {"code": "class ZARRH5MDS3StrideTime:\n    def time_strides(self, filename):\n        \"\"\"Benchmark striding over full trajectory\"\"\"\n        for ts in self.reader_object:\n            pass\n\n    def setup(self, filename):\n        self.reader_object = ZARRH5MDReader(filename)", "min_run_count": 2, "name": "reader_bms.ZARRH5MDS3StrideTime.time_strides", "number": 0, "param_names": ["filename"], "params": [["'s3://zarrtraj-test-data/yiip_aligned_compressed.zarrmd'", "'s3://zarrtraj-test-data/yiip_aligned_uncompressed.zarrmd'", "'s3://zarrtraj-test-data/yiip_aligned_compressed.h5md'", "'s3://zarrtraj-test-data/yiip_aligned_uncompressed.h5md'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 2400.0, "type": "time", "unit": "seconds", "version": "<function version at 0x7fb833929940>", "warmup_time": -1}}, "machines": {"spudda": {"arch": "x86_64", "cpu": "Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz", "machine": "spudda", "num_cpu": "24", "os": "Linux 5.15.0-107-generic", "ram": "32874100", "version": 1}}, "tags": {"v0.1.0": 123}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}